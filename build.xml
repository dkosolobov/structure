<?xml version="1.0"?>
<project name="structure" default="build" basedir=".">
    <property file="build.properties"/>

    <path id="classpath">
        <fileset dir="${lib.dir}" includes="*.jar"/>
    </path>

    <path id="cobertura.classpath">
        <fileset dir="${cobertura.dir}">
            <include name="cobertura-1.9.4.1.jar" />
            <include name="lib/**/*.jar" />
        </fileset>
    </path>

    <target name="init" depends="clean">
        <mkdir dir="${instrumented.dir}" />
        <mkdir dir="${reports.xml.dir}" />
    </target>

    <target name="clean" description="Remove all files created by the build/test process.">
        <delete dir="${build.dir}" />
        <delete dir="${classes.dir}" />
        <delete dir="${instrumented.dir}" />
        <delete dir="${reports.xml.dir}" />

        <delete file="cobertura.log" />
        <delete file="cobertura.ser" />
    </target>

    <target name="compile" depends="init">
        <echo>Compiling...</echo>
        <mkdir dir="${classes.dir}" />
        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="on" classpathref="classpath" />
    </target>

    <target name="build" depends="compile">
        <echo>Creating ${build.dir}/${ant.project.name}.jar</echo>
        <mkdir dir="${build.dir}" />

        <property name="mf.main-class" value="${main-class}" />
        <pathconvert property="mf.classpath" pathsep=" ">
            <path refid="classpath" />
        </pathconvert>

        <jar destfile="${build.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${mf.main-class}" />
                <attribute name="Class-Path" value="${mf.classpath}" />
            </manifest>
        </jar>
    </target>

    <property name="test.reports" value="./reports" />

    <target name="test-html" depends="build">
        <junit fork="yes" printsummary="no" haltonfailure="no">
            <batchtest fork="yes" todir="${test.reports}" >
                <fileset dir="${build.dir}">
                    <include name="**/*Test.class" />
                </fileset>
            </batchtest>
            <formatter type="xml" />

            <classpath>
                <fileset dir="lib">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
        </junit>

        <junitreport todir="${test.reports}">
            <fileset dir="${test.reports}">
                <include name="TEST-*.xml" />
            </fileset>
            <report todir="${test.reports}" />
        </junitreport>
    </target>


    <taskdef classpathref="cobertura.classpath" resource="tasks.properties"/>

    <target name="instrument" depends="init,compile">
        <delete file="cobertura.ser"/>
        <delete dir="${instrumented.dir}" />

        <cobertura-instrument todir="${instrumented.dir}">
            <ignore regex="org.apache.log4j.*" />

            <fileset dir="${classes.dir}">
                <include name="**/*.class" />
                <exclude name="**/*Test.class" />
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="test" depends="init,compile">
        <junit fork="yes" dir="${basedir}" failureProperty="test.failed">
            <classpath location="${instrumented.dir}" />
            <classpath location="${classes.dir}" />
            <classpath refid="cobertura.classpath" />
            <classpath refid="classpath" />

            <formatter type="xml" />

            <batchtest fork="yes" todir="${reports.xml.dir}">
                <fileset dir="${src.dir}">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>

        <junitreport todir="${reports.xml.dir}">
            <fileset dir="${reports.xml.dir}">
                <include name="TEST-*.xml" />
            </fileset>
            <report format="frames" todir="${reports.html.dir}" />
        </junitreport>
    </target>


    <target name="coverage-check">
        <cobertura-check branchrate="34" totallinerate="100" />
    </target>

    <target name="coverage-report">
        <cobertura-report srcdir="${src.dir}" destdir="${coverage.xml.dir}" format="xml" />
    </target>

    <target name="alternate-coverage-report">
        <cobertura-report destdir="${coverage.html.dir}">
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
            </fileset>
        </cobertura-report>
    </target>

    <target name="coverage" depends="build,instrument,test,coverage-report,alternate-coverage-report" description="Compile, instrument ourself, run the tests and generate JUnit and coverage reports."/>

    <target name="api">
        <javadoc
            destdir="${api.dir}"
            author="true"
            version="true"
            use="true"
            windowtitle="Structure API">

            <packageset dir="${src.dir}" defaultexcludes="yes">
                <include name="**"/>
            </packageset>

            <classpath refid="classpath" />

            <doctitle><![CDATA[<h1>Structure</h1>]]></doctitle>
            <bottom><![CDATA[<i>Copyright &#169; 2010 Vrije Universiteit Amsterdam. All Rights Reserved.</i>]]></bottom>
            <tag name="todo" scope="all" description="To do:"/>
            <group title="Structure on IBIS" packages="ibis.structure*"/>
            <group title="SAT4J" packages="org.sat4j*"/>
        </javadoc>
    </target>
</project>

